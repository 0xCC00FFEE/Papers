{"./":{"url":"./","title":"前言","keywords":"","body":"Papers 整理所学习的 Paper，暂且分为 AEG、Crash Analysis、Symbolic Execution、Fuzzing、Other 五类。 AEG 1）论文 《(State of) The Art of War: Offensive Techniques in Binary Analysis》 《AEG: Automatic Exploit Generation》 《CRAX: Software Crash Analysis for Automatic Exploit Generation by Modeling Attacks as Symbolic Continuations》 《Automatic Polymorphic Exploit Generation for Software Vulnerabilities》 《Unleashing MAYHEM on Binary Code》 《Q: Exploit Hardening Made Easy》 《Revery: From Proof-of-Concept to Exploitable》 《Automatic Generation of Control Flow Hijacking Exploits for Software Vulnerabilities》 《Automatic Heap Layout Manipulation for Exploitation》 《Survey of Automated Vulnerability Detection and Exploit Generation Techniques in Cyber Reasoning Systems》 《Data-Oriented programming: On the expresivenes of non-control data attacks》 《Automatic Generation of Data-Oriented Exploits》 2）资料 (PPT)《Binary 自動分析的那些事》YSc.pdf) (PPT)《Automatic Exploit Generation》CSW2016_DAntoine_AutomaticExploitGeneration.pdf) (PPT)《The Automated Exploitation Grand Challenge》The_Automated_Exploitation_Grand_Challenge.pdf) (PPT)《An Introduction to Dynamic Symbolic Execution and the KLEE Infrastructure》Symbolic%26KLEE.pdf) (PPT)《An Introduction To Binary Exploitation》BlackHoodie2018CTF.pdf) (PPT)《The Automated Exploitation Grand Challenge A Five-Year Retrospective》aegc_retro_2018_jvanegue.pdf) (PPT)《automatic binary exploitation and patching using mechanical shellphish.pdf》automatic%20binary%20exploitation%20and%20patching%20using%20mechanical%20shellphish.pdf) 《The Mayhem CRS》 Symbolic Execution 1）论文 《SAT SMT by example》 《SMT Solvers for Software Security》 2）资料 (PPT)《Intro to Binary Analysis with Z3 and Angr》2018-z3-angr.pdf) (PPT)《symbolic execution》symbolic-execution.pdf) (PPT)《Understanding Symbolic Execution》SymbolicExecution.pptx) Other 1）论文 《软件与网络安全研究综述》 《CBTracer: Continuously Building Datasets for Binary Vulnerability and Exploit Research》 《人工智能技术在安全漏洞领域的应用》 © 2019 Mr.Ma3k4H3d. All Rights Reserved. 遵循 知识共享 署名-非商业性使用-相同方式共享 4.0 协议发布            修订时间： 2019-02-27 "},"《CRAX》.html":{"url":"《CRAX》.html","title":"《CRAX: Software Crash Analysis for Automatic Exploit Generation by Modeling Attacks as Symbolic Continuations》 ","keywords":"","body":"《CRAX: Software Crash Analysis for Automatic Exploit Generation by Modeling Attacks as Symbolic Continuations》 作者实现了一套漏洞利用自动生成系统 CRAX，系统以二进制程序及能够使该程序产生崩溃的 Crash 作为输入，通过基于S2E的 concolic 方法进行分析，并最终生成利用程序。 CRAX 能够对以下五种类型的漏洞进行分析，实现了“Return-to-memory”、“Return-to-libc”、“Jump-to-register” 三种方式的漏洞利用。 作者共设计了五组对比试验用以评估 CRAX 系统的有效性： 1、对五种不同类型的漏洞自动生成利用程序； 2、能够生成不同类型的漏洞利用，实现与防护机制的对抗，证明系统在真实环境中的有效性； 3、对 AEG 中的 16 个真实样本进行测试，实现与 AEG 的横向对比； 4、对比原始 concolic 与改进后的 concolic，证明优化的有效性； 5、在真实环境下对大型应用程序进行测试； © 2019 Mr.Ma3k4H3d. All Rights Reserved. 遵循 知识共享 署名-非商业性使用-相同方式共享 4.0 协议发布            修订时间： 2019-02-27 "}}